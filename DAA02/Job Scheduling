// DAA Practical 2- Job Scheduling

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

class Job {
    char id;
    int deadline;
    int profit;

    public Job(char id, int deadline, int profit) {
        this.id = id;
        this.deadline = deadline;
        this.profit = profit;
    }
}

public class Main {
    public static void jobSeq(List<Job> jobs) {
        int n = jobs.size();
        Collections.sort(jobs, Comparator.comparing(Job::profit).reversed());

        char[] res = new char[n];
        boolean[] slot = new boolean[n];

        for (int i = 0; i < n; i++) {
            for (int j = Math.min(n, jobs.get(i).deadline) - 1; j >= 0; j--) {
                if (!slot[j]) {
                    slot[j] = true;
                    res[j] = jobs.get(i).id;
                    break;
                }
            }
        }

        for (int i = 0; i < n; i++) {
            if (slot[i]) {
                System.out.print(res[i] + " ");
            }
        }
    }

    public static void main(String[] args) {
        List<Job> jobs = new ArrayList<>();
        jobs.add(new Job('a', 2, 100));
        jobs.add(new Job('b', 1, 43));
        jobs.add(new Job('c', 3, 56));
        jobs.add(new Job('d', 1, 17));
        jobs.add(new Job('e', 3, 65));

        jobSeq(jobs);
    }
}




